{"version":3,"sources":["img/mine.png","img/flag.svg","components/Square.jsx","components/Board.jsx","utils/utils.js","App.js","index.js"],"names":["Square","square","boardSize","handleClick","handleRightClick","gameOver","sizeStyle","width","height","imgSize","className","style","color","n","clicked","onClick","flagged","id","onContextMenu","e","mine","src","imgMine","alt","imgFlag","Board","arrBoard","boardJsx","rows","squares","push","checkSurroundingRecursion","array","i","j","nMines","calcSurroundingMines","App","useState","setArrBoard","setBoardSize","setGameOver","setBoard","size","tmp","Array","Math","random","createGameBoard","useEffect","setTimeout","finishLoop","preventDefault","forEach","row","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4fdebf0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mine.452ea89f.png\";","export default __webpack_public_path__ + \"static/media/flag.083d31fd.svg\";","import React from \"react\";\r\nimport imgMine from \"../img/mine.png\";\r\nimport imgFlag from \"../img/flag.svg\";\r\n\r\nexport default function Square({\r\n  square,\r\n  boardSize,\r\n  handleClick,\r\n  handleRightClick,\r\n  gameOver,\r\n}) {\r\n  const txtColor = [\r\n    { color: \"black\" },\r\n    { color: \"blue\" },\r\n    { color: \"yellow\" },\r\n    { color: \"orange\" },\r\n    { color: \"red\" },\r\n    { color: \"red\" },\r\n    { color: \"red\" },\r\n    { color: \"red\" },\r\n  ];\r\n  const sizeStyle = {\r\n    width: 100 / boardSize + \"%\",\r\n    height: 100 / boardSize + \"%\",\r\n  };\r\n  const imgSize = {\r\n    width: \"50%\",\r\n    height: \"50%\",\r\n  };\r\n  return (\r\n    <div className=\"squareContainer\" style={sizeStyle}>\r\n      <div\r\n        style={txtColor[square.n]}\r\n        className={square.clicked ? \"squareNoHover clicked\" : \"square\"}\r\n        onClick={() => {\r\n          if (!square.flagged) handleClick(square.id);\r\n        }}\r\n        onContextMenu={e => handleRightClick(e, square.id)}\r\n      >\r\n        {square.mine && (square.clicked || gameOver) ? (\r\n          <img style={imgSize} src={imgMine} alt=\"\" />\r\n        ) : null}\r\n\r\n        {square.clicked && square.n > 0 ? (\r\n          square.n\r\n        ) : square.flagged ? (\r\n          <img style={imgSize} src={imgFlag} alt=\"\" />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nexport default function Board({\r\n  arrBoard,\r\n  boardSize,\r\n  handleClick,\r\n  handleRightClick,\r\n  gameOver,\r\n}) {\r\n  const boardJsx = [];\r\n  for (const rows of arrBoard) {\r\n    for (const squares of rows) {\r\n      boardJsx.push(\r\n        <Square\r\n          key={squares.id}\r\n          square={squares}\r\n          boardSize={boardSize}\r\n          handleClick={handleClick}\r\n          handleRightClick={handleRightClick}\r\n          gameOver={gameOver}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  return <div className=\"gameBoard\">{boardJsx}</div>;\r\n}\r\n","export const createGameBoard = size => {\r\n  let tmp = new Array();\r\n  let id = 0;\r\n  for (let i = 0; i < size; i++) {\r\n    tmp[i] = new Array();\r\n    for (let j = 0; j < size; j++) {\r\n      tmp[i].push({\r\n        mine: Math.random() > 0.1 ? false : true,\r\n        id,\r\n        n: 0,\r\n        clicked: false,\r\n        flagged: false,\r\n      });\r\n      id++;\r\n    }\r\n  }\r\n  return tmp;\r\n};\r\n\r\nexport const checkSurroundingRecursion = (array, i, j, boardSize) => {\r\n  const nMines = calcSurroundingMines(array, i, j, boardSize);\r\n  if (array[i][j].clicked || array[i][j].flagged) return;\r\n\r\n  if (nMines === 0) {\r\n    array[i][j].clicked = true;\r\n    if (i < boardSize - 1)\r\n      checkSurroundingRecursion(array, i + 1, j, boardSize);\r\n    if (i > 0) checkSurroundingRecursion(array, i - 1, j, boardSize);\r\n    if (j < boardSize - 1)\r\n      checkSurroundingRecursion(array, i, j + 1, boardSize);\r\n    if (j > 0) checkSurroundingRecursion(array, i, j - 1, boardSize);\r\n  } else {\r\n    array[i][j].clicked = true;\r\n    array[i][j].n = nMines;\r\n  }\r\n};\r\n\r\nexport const calcSurroundingMines = (array, i, j, boardSize) => {\r\n  let nMines = 0;\r\n  if (i > 0) {\r\n    if (array[i - 1][j].mine) nMines++;\r\n    if (j < boardSize - 1) {\r\n      if (array[i - 1][j + 1].mine) nMines++;\r\n    }\r\n    if (j > 0) {\r\n      if (array[i - 1][j - 1].mine) nMines++;\r\n    }\r\n  }\r\n  if (i < boardSize - 1) {\r\n    if (array[i + 1][j].mine) nMines++;\r\n    if (j < boardSize - 1) {\r\n      if (array[i + 1][j + 1].mine) nMines++;\r\n    }\r\n    if (j > 0) {\r\n      if (array[i + 1][j - 1].mine) nMines++;\r\n    }\r\n  }\r\n  if (j > 0) {\r\n    if (array[i][j - 1].mine) nMines++;\r\n  }\r\n  if (j < boardSize - 1) {\r\n    if (array[i][j + 1].mine) nMines++;\r\n  }\r\n  return nMines;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport Board from \"./components/Board\";\nimport {\n  createGameBoard,\n  calcSurroundingMines,\n  checkSurroundingRecursion,\n} from \"./utils/utils\";\n\nexport default function App() {\n  const [arrBoard, setArrBoard] = useState([]);\n  const [boardSize, setBoardSize] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  const setBoard = size => {\n    setBoardSize(size);\n    setArrBoard(createGameBoard(size));\n    setGameOver(false);\n  };\n\n  const handleRightClick = (e, id) => {\n    e.preventDefault();\n    const tmp = [...arrBoard];\n    tmp.forEach(row =>\n      row.forEach(square => {\n        if (square.id === id && !square.clicked) {\n          square.flagged = !square.flagged;\n        }\n      })\n    );\n    setArrBoard(tmp);\n  };\n  const handleClick = id => {\n    let finishLoop = false;\n    const tmp = [...arrBoard];\n    for (let i = 0; i < boardSize; i++) {\n      if (gameOver || finishLoop) break;\n      for (let j = 0; j < boardSize; j++) {\n        if (arrBoard[i][j].id === id) {\n          if (arrBoard[i][j].mine) {\n            setGameOver(true);\n            return;\n          } else {\n            const nMines = calcSurroundingMines(tmp, i, j, boardSize);\n            if (nMines === 0) {\n              checkSurroundingRecursion(tmp, i, j, boardSize);\n              finishLoop = true;\n            } else {\n              tmp[i][j].n = nMines;\n              tmp[i][j].clicked = true;\n              finishLoop = true;\n            }\n          }\n        }\n      }\n    }\n    setArrBoard(tmp);\n  };\n\n  useEffect(() => {\n    setBoard(9);\n  }, []);\n\n  useEffect(() => {\n    if (gameOver) {\n      setTimeout(() => {\n        setBoard(9);\n      }, 1000);\n    }\n  }, [gameOver]);\n  return (\n    <div className=\"app\">\n      <Board\n        arrBoard={arrBoard}\n        boardSize={boardSize}\n        handleClick={handleClick}\n        handleRightClick={handleRightClick}\n        gameOver={gameOver}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}